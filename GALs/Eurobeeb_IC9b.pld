Name     Eurobeeb_IC9_V6b ;
PartNo   IC9 ;
Date     09/02/2025 ;
Revision 06 ;
Designer Steve Crozier ;
Company  None ;
Assembly None ;
Location None ;
Device   g16v8 ;

/* Important notes about this address decoding logic implementation
   -----------------------------------------------------------------
   1. This is based on the content from the tables of P132 and P133 of the
      Euro-BEEB manual.  Note that this differs from the content of ic09v5.txt
      on the mdfs.net website, although the default Map 0 (and Map 1) look to
      be identical/consistent.
   2. In this version of the file only Maps A through E are supported.  The
      GAL16V8D does not have sufficent gates to decode all of the
      configurations.
   3. Unmapped configurations are included (but commented) so this could be
      recompiled to support a different combination of maps if required.
   4. While decoding of maps A-E has been tested to be consistent with the 
      table in this document, the only map tested in application is the 
      default Map 0 (all links L6-L9 open) for the standard EuroBEEB)      */
   
/* *************** INPUT PINS *********************/
PIN 1  = L0    ; /* Link/map select inputs  L6      */ 
PIN 2  = L1    ; /*                         L7      */ 
PIN 3  = L2    ; /*                         L8      */ 
PIN 4  = L3    ; /*                         L9      */ 
PIN 5  = A11   ; /* Address inputs to decode        */ 
PIN 6  = A12   ; /*                                 */ 
PIN 7  = A13   ; /*                                 */ 
PIN 8  = A14   ; /*                                 */ 
PIN 9  = A15   ; /*                                 */ 

/* *************** OUTPUT PINS *********************/
PIN 12 = !M0   ; /*                                 */ 
PIN 13 = !M1   ; /*                                 */ 
PIN 14 = !M2   ; /*                                 */ 
PIN 15 = !M3   ; /*                                 */ 
PIN 16 = CMOS  ; /*Note CMOS is active HIGH for RAMs*/ 
PIN 17 = !BLK0 ; /*                                 */ 
PIN 19 = !IO   ; /*                                 */ 

FIELD Address = [A15..A11];
FIELD Map = [L3..L0]; 
/*L3..L0 rather than L9..L6 since numbering must match bit indices */

/* The EuroCUBE-65/EuroBeeb memory map can be configured with links L9-L6. Most
boards are configured to the default memory map 0.

          + <--------------------- NOT PRESENT IN V6b ---------------------> + <-----  ONLY THESE MAPS ARE DECODED ------>+ 
 Map         0        1        2          4        5          8        9        A        B        C        D        E
 L8-L6       0000     0001     0010       0100     0101       1000     1001     1010     1011     1100     1101     1110
             Dev      EPROM    Min        FLEX     FLEX       ATOM     L-C      ROM      L-C      RAM      Min      Gen 
             BASIC    BASIC    BASIC     L-C6809   6809       BASIC    EPROM    Inten    RAM      Inten    Conf     Purp
     0000 +--------+--------+--------+ +--------+--------+ +--------+--------+--------+--------+--------+--------+--------+ +
 PAGE0_1  |        |        |M3/CMOS | |        |        |M3/BLK0/CMOS       |        | M3/CMOS|        | M3/CMOS|        | |
     0800 +        |        +--------+ |        |        | +--------+        |        +--------+        +--------+        | |
 PAGE0_2  |        |        |M2/CMOS | |        |        | |  BLK0  |        |        | M2/CMOS|        | M2/CMOS|        | |
     1000 +   M3   |        +--------+ |   M3   |        | +--------+        |        +--------+   M3   +--------+   M3   | |
 PAGE1_1  |  CMOS  |        |        | |  CMOS  |        | |        |   M3   |   M3   | M1/CMOS|  CMOS  |        |  CMOS  | |
     1800 +        |        |        | |        |        | |        |  CMOS  |  CMOS  +--------+        |        |        | |
 PAGE1_2  |        |        |        | |        |        | |        |        |        |        |        |        |        | |
     2000 +--------+   M3   +        | +--------+   M3   | |        |        |        |        +--------+        +--------+ |
          |        |  CMOS  |        | |        |  CMOS  | |        |        |        |        |        |        |        | |
 PAGE2TO3 |   M2   |        |        | |   M2   |        | |        |        |        |        |   M2   |        |   M2   | |
          |  CMOS  |        |        | |  CMOS  |        | |        |        |        |        |  CMOS  |        |  CMOS  | |
     4000 +--------+--------+        | +--------+--------+ +        +--------+--------+        +--------+        +--------+ |
          |        |        |        | |        |        | |        |        |        |        |        |        |        | |
 PAGE4TO5 |        |        |        | |        |        | |        |        |        |        |   M1   |        |        | |
          |        |        |        | |        |        | |        |        |        |        |  CMOS  |        |        | |
     6000 +        |   M2   |        | |        |   M2   | |        |        |   M2   |        +--------+        |        | |
          |        |  CMOS  |        | |        |  CMOS  | |        |        |        |        |        |        |        | |
     7000 +        |        |        | |        |        | |        +--------+        |        +--------+        +--------+ |
          |        |        |        | |        |        | |        |  BLK0  |        |        |  BLK0  |        |  BLK0  | |
     8000 +--------+--------+--------+ +        +--------+ |        +--------+--------+--------+--------+        +--------+ |
 PAGE8TO9 |                          | |                 | |        |        |        |        |        |        |        | |
     A000 +                          | |                 | +--------+        |        |        |        |        |        | |
          |            M1            | |                 | |        |        |   M1   |        |        |        |   M1   | |
 PAGEATOB |                          | |                 | |   M2   |        |        |        |        |        |        | |
          |                          | |                 | |  CMOS  |        |        |        |        |        |        | |
     C000 +--------+--------+--------+ |                 | +--------+        +--------+        |        |        +--------+ |
 PAGEC    |            M0            | |                 | |        |        |        |        |        |        |        | |
     D000 +--------+--------+--------+ |                 | |   M1   +--------+        |        |        |        |        | |
 PAGED    |           BLK0           | |                 | |        | M2/CMOS|        |        |        |        |        | |
     E000 +--------+--------+--------+ +-----------------+ +--------+--------+        |   M0   |   M0   +--------+        | |
 PAGEE_1  |                          | |  M1/BLK0/CMOS   | |   M0   |        |        |        |        |        |        | |
     E800 +            M0            + +-----------------+ +--------+   M1   |   M0   |        |        |   M1   |   M0   | |
 PAGEE_2  |                          | |    M0/BLK0/IO   | |        |        |        |        |        |        |        | |
     F000 +--------+--------+--------+ +-----------------+ +   M0   +--------+        |        |        +--------+        | |
 PAGEF_1  |            M0            | |                 | |        |   M0   |        |        |        |   M0   |        | |
     F800 +--------+--------+--------+ +        M0       | +--------+--------+--------+--------+--------+--------+--------+ |
 PAGEF_2  |          M0/IO           | |                 | | M0/IO  | M0/IO  | M0/IO  | M0/IO  | M0/IO  | M0/IO  | M0/IO  | |
     FFFF +--------+--------+--------+ +-----------------+ +--------+--------+--------+--------+--------+--------+--------+ +*/

PAGE0     = Address:[0000..0FFF];
PAGE0_1   = Address:[0000..07FF];
PAGE0_2   = Address:[0800..0FFF];
PAGE1_1   = Address:[1000..17FF];
PAGE0TO1  = Address:[0000..1FFF];
PAGE0TO3  = Address:[0000..3FFF];
PAGE0TO7  = Address:[0000..7FFF];
PAGE2TO3  = Address:[2000..3FFF];
PAGE4TO5  = Address:[4000..5FFF];
PAGE4TO7  = Address:[4000..7FFF];
PAGE7     = Address:[7000..7FFF];
PAGE8TOB  = Address:[8000..BFFF];
PAGE8TOF  = Address:[8000..FFFF];
PAGEATOB  = Address:[A000..BFFF];
PAGEC     = Address:[C000..CFFF];
PAGECTOD  = Address:[C000..DFFF];
PAGECTOF  = Address:[C000..FFFF];
PAGED     = Address:[D000..DFFF];
PAGEE_1   = Address:[E000..E7FF];
PAGEE_2   = Address:[E800..EFFF];
PAGEE     = Address:[E000..EFFF];
PAGEETOF  = Address:[E000..FFFF];
PAGEF     = Address:[F000..FFFF];
PAGEF_2   = Address:[F800..FFFF];

CMOS =/* (Map:'h'0 &  PAGE0TO3)                        #
       (Map:'h'1 &  PAGE0TO7)                        #
       (Map:'h'2 &  PAGE0)                           #
       (Map:'h'4 & (PAGE0TO3 # PAGEE_1))             #
       (Map:'h'5 & (PAGE0TO7 # PAGEE_1))             #
       (Map:'h'8 & (PAGE0_1  # PAGEATOB))            #
       (Map:'h'9 & (PAGE0TO3 # PAGED))               ;*/
       (Map:'h'A &  PAGE0TO3)                        #
       (Map:'h'B & (PAGE0_1 # PAGE0_2 # PAGE1_1))    #
       (Map:'h'C & (PAGE0TO1 # PAGE2TO3 # PAGE4TO5)) #
       (Map:'h'D & (PAGE0_1 # PAGE0_2))              #
       (Map:'h'E & (PAGE0TO1 # PAGE2TO3))            ;
	   
IO = /*(Map:'h'0 & PAGEF_2)  #
       (Map:'h'1 & PAGEF_2)  #
       (Map:'h'2 & PAGEF_2)  #
       (Map:'h'4 & PAGEE_2)  #
       (Map:'h'5 & PAGEE_2)  #
       (Map:'h'8 & PAGEF_2)  #
       (Map:'h'9 & PAGEF_2)  ;*/
       (Map:'h'A & PAGEF_2)  #
       (Map:'h'B & PAGEF_2)  #
       (Map:'h'C & PAGEF_2)  #
       (Map:'h'D & PAGEF_2)  #
       (Map:'h'E & PAGEF_2)  ;
	   
BLK0 =/*(Map:'h'0 & PAGED)  #
       (Map:'h'1 & PAGED)  #
       (Map:'h'2 & PAGED)  #
       (Map:'h'4 & PAGEE)  #
       (Map:'h'5 & PAGEE)  #
       (Map:'h'8 & PAGE0)  #
       (Map:'h'9 & PAGE7)  ;*/  /*no IO space in map A or B*/
       (Map:'h'C & PAGE7)  #
       (Map:'h'D & PAGED)  #
       (Map:'h'E & PAGE7)  ;
	 
M3 = /*(Map:'h'0 & PAGE0TO1) #
     (Map:'h'1 & PAGE0TO3) #
     (Map:'h'2 & PAGE0_1)  #
     (Map:'h'4 & PAGE0TO1) #
     (Map:'h'5 & PAGE0TO3) #
     (Map:'h'8 & PAGE0_1)  #
     (Map:'h'9 & PAGE0TO3) ;*/
     (Map:'h'A & PAGE0TO3) #
     (Map:'h'B & PAGE0_1)  #
     (Map:'h'C & PAGE0TO1) #
     (Map:'h'D & PAGE0_1)  #
     (Map:'h'E & PAGE0TO1) ;

M2 = /*(Map:'h'0 & PAGE2TO3) #
     (Map:'h'1 & PAGE4TO7) #
     (Map:'h'2 & PAGE0_2)  #
     (Map:'h'4 & PAGE2TO3) #
     (Map:'h'5 & PAGE4TO7) #
     (Map:'h'8 & PAGEATOB) #
     (Map:'h'9 & PAGED)    ;*/
     (Map:'h'A & PAGE4TO7) #
     (Map:'h'B & PAGE0_2)  #
     (Map:'h'C & PAGE2TO3) #
     (Map:'h'D & PAGE0_2)  #
     (Map:'h'E & PAGE2TO3) ;

M1 =/*(Map:'h'0 & PAGE8TOB) #
     (Map:'h'1 & PAGE8TOB) #
     (Map:'h'2 & PAGE8TOB) #
     (Map:'h'4 & PAGEE_1)  #
     (Map:'h'5 & PAGEE_1)  #
     (Map:'h'8 & PAGECTOD) #
     (Map:'h'9 & PAGEE)    ;*/
     (Map:'h'A & PAGE8TOB) #
     (Map:'h'B & PAGE1_1)  #
     (Map:'h'C & PAGE4TO5) #
     (Map:'h'D & PAGEE)    #
     (Map:'h'E & PAGE8TOB) ;

M0 = /*(Map:'h'0 & (PAGEC # PAGEETOF)) #
     (Map:'h'1 & (PAGEC # PAGEETOF)) #
     (Map:'h'2 & (PAGEC # PAGEETOF)) #
     (Map:'h'4 & (PAGEE_2 # PAGEF))  #
     (Map:'h'5 & (PAGEE_2 # PAGEF))  #
     (Map:'h'8 &  PAGEETOF)          #
     (Map:'h'9 &  PAGEF)             ;*/
     (Map:'h'A &  PAGECTOF)          #
     (Map:'h'B &  PAGE8TOF)          #
     (Map:'h'C &  PAGE8TOF)          #
     (Map:'h'D &  PAGEF)             #
     (Map:'h'E &  PAGECTOF)          ;
	 
	 
/* TO DO:
*/